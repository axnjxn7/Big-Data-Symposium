import pandas as pd
import numpy as np

#load and read the datasets
data = pd.read_csv('HMDA_Data_FL.csv')

#convert categorical features to numeric
data['state_code'] = data['state_code'].astype('category').cat.codes
data['loan_product_type'] = data['loan_product_type'].astype('category').cat.codes

#clean debt_to_income_ratio column
def clean_debt_to_income(value):
    if isinstance(value, str):
        if '-' in value:
            nums = [int(s.strip('<>%')) for s in value.split('-')]
            return sum(nums) / len(nums)
        elif '<' in value:
            return int(value.strip('<>%'))
        elif '>' in value:
            return int(value.strip('<>%'))
    return float(value)

data['debt_to_income_ratio'] = data['debt_to_income_ratio'].apply(clean_debt_to_income)

#clean age ranges
def clean_age(value):
    if isinstance(value, str):
        if '-' in value:
            nums = [int(s.strip('<>')) for s in value.split('-')]
            return sum(nums) / len(nums)
        elif '<' in value:
            return 25
        elif '>' in value:
            return 75
    return float(value)

data['applicant_age'] = data['applicant_age'].apply(clean_age)
data['co-applicant_age'] = data['co-applicant_age'].apply(clean_age)

#fill missing values
numeric_cols = data.select_dtypes(include=['float64', 'int64']).columns
data[numeric_cols] = data[numeric_cols].fillna(data[numeric_cols].mean())

categorical_cols = data.select_dtypes(include=['object', 'category']).columns
data[categorical_cols] = data[categorical_cols].fillna(-1)